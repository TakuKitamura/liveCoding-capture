#!/usr/bin/env oh

## ### Pipes
##
## Oh exposes pipes as first-class values. Pipes are created implicitly when
## running commands as part of a pipeline but they may also be created
## explicitly using the `pipe` command. Pipes are useful for communicating,
## particularly with external commands, but, due to buffering, they are not
## as convenient as channels for synchronization. Compare the example below
## to the same example (shown previously) using channels.
##
#{
define counter: method (n) = {
    define welcome: pipe

    while $true {
        write $welcome: set n: add $n 1

        welcome::read
    }
}

define filter: method (base) = {
    define welcome: pipe
    while $true {
        define msg: readlist

        define thanks: msg::get 0
        define n: msg::get 1

        if (mod $n $base) {
                write $welcome $n

                welcome::read
        }

        thanks::write
    }
}

define prime-numbers: pipe

counter 1 | block {
    define in = $_stdin_

    while $true {
        define msg: in::readlist

        define thanks: msg::get 0
        define prime: msg::get 1

        write $prime

        define out: pipe
        block {
            filter $prime &
        } <$in >$out

        thanks::write

        set in = $out
    }
} >$prime-numbers &

define count: integer 100
printf "The first %d prime numbers" $count

define line = ""
while $count {
    define p: read
    set line: ""::join $line ("%7.7s"::sprintf $p)
    set count: sub $count 1
    if (not: mod $count 10) {
        echo $line
        set line = ""
    }
} <$prime-numbers
#}
##

#-     The first 100 prime numbers
#-           2      3      5      7     11     13     17     19     23     29
#-          31     37     41     43     47     53     59     61     67     71
#-          73     79     83     89     97    101    103    107    109    113
#-         127    131    137    139    149    151    157    163    167    173
#-         179    181    191    193    197    199    211    223    227    229
#-         233    239    241    251    257    263    269    271    277    281
#-         283    293    307    311    313    317    331    337    347    349
#-         353    359    367    373    379    383    389    397    401    409
#-         419    421    431    433    439    443    449    457    461    463
#-         467    479    487    491    499    503    509    521    523    541

