#!/usr/bin/env oh

## #### Booleans
##
## Oh has a boolean type and the boolean values `true` and `false`.
## The `boolean` command can be used to create a boolean value. Passing
## `boolean` a non-zero number, the zero status, any string (including
## the empty string), and any symbol with the exception of the symbol
## `false` will result in a value of `true`.
##
## The command,
##
#{
write: boolean 0
#}
##
## produces the output,
##
#+     true
##
## Oh provides short-circuit `and` and `or` commands as well as the `not`
## command.
##
## The commands below,
##
#{
echo "short-circuit and (with false and something) =>" {
    and $false (echo never be evaluated)
}
echo "short-circuit or (with true and something) =>" {
    or $true (echo never be evaluated)
}
echo "not false =>": not $false
#}
##
## produce the output,
##
#+     short-circuit and (with false and something) => false
#+     short-circuit or (with true and something) => true
#+     not false => true
##
## Oh also provides a set of relational operators:
##
#{
echo "3 is equal to 2 =>": eq 3 2
echo "3 is greater than or equal to 2 =>": gt 3 2
echo "3 is greater than 2 =>": ge 3 2
echo "3 is less than or equal to 2 =>": le 3 2
echo "3 is less than 2 =>": lt 3 2
echo "3 is not equal to 2 =>": ne 3 2
#}
##

#-     3 is equal to 2 => false
#-     3 is greater than or equal to 2 => true
#-     3 is greater than 2 => true
#-     3 is less than or equal to 2 => false
#-     3 is less than 2 => false
#-     3 is not equal to 2 => true

define common: import: ... common.oh

common::apply-predicates: boolean ""

#-     is-atom "x => true"
#-     is-boolean "x => true"
#-     is-builtin "x => false"
#-     is-channel "x => false"
#-     is-cons "x => false"
#-     is-continuation "x => false"
#-     is-float "x => false"
#-     is-integer "x => false"
#-     is-method "x => false"
#-     is-null "x => false"
#-     is-number "x => false"
#-     is-object "x => false"
#-     is-pipe "x => false"
#-     is-rational "x => false"
#-     is-status "x => false"
#-     is-string "x => false"
#-     is-symbol "x => false"
#-     is-syntax "x => false"

