#!/usr/bin/env oh

## Oh exposes pipes, which are implicit in other shells, as first-class
## values:
##
#{
define p: pipe

spawn {
    # Save code to create a continuation-based until command.
    define code: quote: syntax e (condition: body) = {
        define label: method () =: return $return
        define continue: method (label) =: label $label

        set body: cons (quote block) $body
        define loop: label
        if (e::eval $condition): return ()
        e::eval $body
        continue $loop
    }

    # Now send this code through the pipe.
    p::write @$code
}

# Create the new command by evaluating what was sent through the pipe.
define until: eval: p::readlist

# Now use the new 'until' command.
define count: integer 0
until (ge $count (integer 100)) {
    write $count
    set count: add $count 1
}
#}
##

#-     0
#-     1
#-     2
#-     3
#-     4
#-     5
#-     6
#-     7
#-     8
#-     9
#-     10
#-     11
#-     12
#-     13
#-     14
#-     15
#-     16
#-     17
#-     18
#-     19
#-     20
#-     21
#-     22
#-     23
#-     24
#-     25
#-     26
#-     27
#-     28
#-     29
#-     30
#-     31
#-     32
#-     33
#-     34
#-     35
#-     36
#-     37
#-     38
#-     39
#-     40
#-     41
#-     42
#-     43
#-     44
#-     45
#-     46
#-     47
#-     48
#-     49
#-     50
#-     51
#-     52
#-     53
#-     54
#-     55
#-     56
#-     57
#-     58
#-     59
#-     60
#-     61
#-     62
#-     63
#-     64
#-     65
#-     66
#-     67
#-     68
#-     69
#-     70
#-     71
#-     72
#-     73
#-     74
#-     75
#-     76
#-     77
#-     78
#-     79
#-     80
#-     81
#-     82
#-     83
#-     84
#-     85
#-     86
#-     87
#-     88
#-     89
#-     90
#-     91
#-     92
#-     93
#-     94
#-     95
#-     96
#-     97
#-     98
#-     99

